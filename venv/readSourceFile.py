
def getTestPolys():
    return [[[0.0, 21.5], [241.5, 35.5], [495.75, 0.0], [546.25, 59.5], [683.5, 54.25], [750.0, 191.75], [704.75, 225.0], [704.75, 340.0], [750.0, 373.25], [683.5, 510.75], [546.25, 505.5], [495.75, 565.0], [241.5, 529.5], [0.0, 543.5]], [[750.0, 21.5], [991.5, 35.5], [1245.75, 0.0], [1296.25, 59.5], [1433.5, 54.25], [1500.0, 191.75], [1454.75, 225.0], [1454.75, 340.0], [1500.0, 373.25], [1433.5, 510.75], [1296.25, 505.5], [1245.75, 565.0], [991.5, 529.5], [750.0, 543.5]], [[1004.25, 551.0], [1245.75, 565.0], [1500.0, 529.5], [1550.5, 589.0], [1687.75, 583.75], [1754.25, 721.25], [1709.0, 754.5], [1709.0, 869.5], [1754.25, 902.75], [1687.75, 1040.25], [1550.5, 1035.0], [1500.0, 1094.5], [1245.75, 1059.0], [1004.25, 1073.0]], [[243.62658922173387, 552.4833080929338], [485.12658922173387, 566.4833080929338], [739.3765892217339, 530.9833080929338], [789.8765892217339, 590.4833080929338], [927.1265892217339, 585.2333080929338], [993.6265892217339, 722.7333080929338], [948.3765892217339, 755.9833080929338], [948.3765892217339, 870.9833080929338], [993.6265892217339, 904.2333080929338], [927.1265892217339, 1041.7333080929338], [789.8765892217339, 1036.4833080929338], [739.3765892217339, 1095.9833080929338], [485.12658922173387, 1060.4833080929338], [243.62658922173387, 1074.4833080929338]], [[740.7271223341615, 1094.3920859109646], [1499.2271223341615, 1094.3920859109646], [1499.2271223341615, 1159.6420859109646], [740.7271223341615, 1159.6420859109646]], [[2.2737367544323206e-13, 1159.6420859109646], [758.5, 1159.6420859109646], [758.5, 1224.8920859109646], [2.2737367544323206e-13, 1224.8920859109646]], [[758.5, 1159.6420859109646], [1516.9999999999998, 1159.6420859109646], [1516.9999999999998, 1224.8920859109646], [758.5, 1224.8920859109646]], [[2.2737367544323206e-13, 1224.8920859109646], [758.5, 1224.8920859109646], [758.5, 1290.1420859109646], [2.2737367544323206e-13, 1290.1420859109646]], [[1454.25, 1231.0566231057403], [1894.5, 1187.8066231057403], [2000.0000000000002, 1350.3066231057403], [2000.0000000000002, 1440.3066231057403], [1894.5, 1602.8066231057403], [1454.25, 1559.5566231057403]], [[758.5, 1268.1420859109646], [1198.75, 1224.8920859109646], [1304.25, 1387.3920859109646], [1304.25, 1477.3920859109646], [1198.75, 1639.8920859109646], [758.5, 1596.6420859109646]], [[0.0, 1333.3920859109644], [440.25, 1290.1420859109644], [545.75, 1452.6420859109644], [545.75, 1542.6420859109644], [440.25, 1705.1420859109646], [0.0, 1661.8920859109644]], [[1210.3065533286906, 1622.0917075610853], [1650.5565533286906, 1578.8417075610853], [1756.0565533286906, 1741.3417075610853], [1756.0565533286906, 1831.3417075610853], [1650.5565533286906, 1993.8417075610857], [1210.3065533286906, 1950.5917075610855]], [[1340.8333333333333, -2.2737367544323206e-13], [1539.8333333333333, 29.749999999999773], [1738.8333333333335, -2.2737367544323206e-13], [1757.3333333333335, 31.249999999999773], [1539.8333333333333, 76.25], [1322.3333333333333, 31.249999999999773]], [[1472.9153005733572, 66.24592223814429], [1671.9153005733572, 95.99592223814429], [1870.9153005733576, 66.24592223814429], [1889.4153005733576, 97.49592223814429], [1671.9153005733572, 142.49592223814452], [1454.4153005733572, 97.49592223814429]], [[1497.157134790609, 116.3700155444925], [1696.1571347906092, 146.1200155444925], [1895.1571347906092, 116.3700155444925], [1913.6571347906092, 147.6200155444925], [1696.1571347906092, 192.62001554449273], [1478.657134790609, 147.6200155444925]], [[1515.4757107947232, 165.6085966305349], [1714.4757107947232, 195.3585966305349], [1913.4757107947232, 165.6085966305349], [1931.9757107947232, 196.8585966305349], [1714.4757107947232, 241.85859663053512], [1496.9757107947232, 196.8585966305349]], [[1599.9999999999998, 227.56790563222418], [1702.7499999999995, 243.81790563222415], [1800.0, 227.56790563222418], [1897.249999999999, 243.81790563222415], [2000.000000000001, 227.56790563222418], [1975.0, 319.5679056322244], [1800.0, 299.0679056322244], [1624.9999999999998, 319.5679056322244]], [[1499.9999999999995, 310.7821913465101], [1602.7499999999995, 327.0321913465101], [1699.9999999999995, 310.7821913465101], [1797.2499999999986, 327.0321913465101], [1900.0000000000005, 310.7821913465101], [1874.9999999999995, 402.7821913465104], [1699.9999999999995, 382.2821913465104], [1524.9999999999995, 402.7821913465104]], [[1599.9999999999995, 393.9964770607961], [1702.7499999999995, 410.24647706079605], [1799.9999999999995, 393.9964770607961], [1897.2499999999986, 410.24647706079605], [2000.0000000000005, 393.9964770607961], [1974.9999999999995, 485.9964770607964], [1799.9999999999995, 465.4964770607964], [1624.9999999999995, 485.9964770607964]], [[1509.6650261030463, 478.3429515471534], [1612.4150261030463, 494.59295154715335], [1709.6650261030463, 478.3429515471534], [1806.9150261030454, 494.59295154715335], [1909.6650261030472, 478.3429515471534], [1884.6650261030463, 570.3429515471537], [1709.6650261030463, 549.8429515471537], [1534.6650261030463, 570.3429515471537]]]

data = getTestPolys( );

# Specify the file path
file_path = "coordinates.txt"

# Open the file in write mode
with open(file_path, "w") as file:
    # Iterate through the data and write each sublist as a line
    for sublist in data:
        line = " ".join(map(str, sublist))  # Convert numbers to strings and join with space
        file.write(line + "\n")  # Write the line to the file

print("Data has been written to", file_path)
